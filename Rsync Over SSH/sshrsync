#! /bin/bash
#
# Script for file transfer using rsync + ssh. Written by davidhcefx, 2021.4.2.

## Add server below; format: <alias> <user@host> <port> <remote root path/>
servers=(
    "local" "david@127.0.0.1"       22  "/home/david/"
)

nb_column=4  # number of columns in servers
host=
port=
# TODO: is remote home really needed?
remote_root=
alias_name=
direction=
src_path=
dst_path=


function yellow() {
    printf "\e[33m$1\e[0m"
}

function list_servers() {
    for ((i = 0; i < ${#servers[@]}; i += $nb_column)); do
        echo -e "$(yellow "[${servers[i]}]")\t${servers[i + 1]} (${servers[i + 2]})"
    done
    echo ""
}

# return idx of alias name, or -1 if failed
function find_idx_of_alias() {
    for ((i = 0; i < ${#servers[@]}; i += $nb_column)); do
        if [[ ${servers[i]} == "$1" ]]; then
            return $i
        fi
    done
    return 255
}

function select_target() {
    if [ -z "$alias_name" ]; then
        read -rep "$(yellow "Target: ")" alias_name
    fi
    find_idx_of_alias "$alias_name"
    idx=$?
    if (( idx >= ${#servers[@]} )); then
        echo "Error: Alias name not found!"
        exit 1
    fi
    host="${servers[idx + 1]}"
    port="${servers[idx + 2]}"
    remote_root="${servers[idx + 3]}"
}

# set direction from stdin if not set
function set_direction() {
    if [ -z "$direction" ]; then
        read -rep "$(yellow "Direction: [to|from] ")" direction
    fi
}

# set src_path and dst_path from stdin or args (with user@host prefix)
function set_src_dst_paths() {
    if (( $# < 2 )); then
        # from stdin
        read -rep "$(yellow "Local file: ")" local_path
        local_path=$(sed "s:^~:$HOME:" <<< "$local_path")  # tilde expansion
        if ! [ -e "$local_path" ]; then
            echo "Error: File not found!";
            exit 1;
        fi
        read -rep "$(yellow "Remote path: $remote_root/")" remote_path
        remote_path="$remote_root/$remote_path"

        case "$direction" in
        to)
            src_path="$local_path"
            dst_path="$host:$remote_path"
            ;;
        from)
            src_path="$host:$remote_path"
            dst_path="$local_path"
            ;;
        *) exit 1
        esac
    else
        # from args
        src_path=("${@:1:(($#-1))}")
        shift $(($# - 1))
        dst_path="$1"

        case "$direction" in
        to)
            dst_path="$host:$dst_path"
            ;;
        from)
            # TODO: multiple src files support?
            if (( ${#src_path[@]} > 1 )); then
                echo -e "$(yellow Warning): Multiple remote files doesn't seem correct!\n"
            fi
            src_path="$host:$src_path"
            ;;
        *) exit 1
        esac
    fi
    # safety check
    if [[ $src_path == */ ]]; then
        echo -e "$(yellow Warning): Coping folder *contents* instead of the whole folder" \
            "might be dangerous! (eg. Overwrite all contents under home)\n"
    fi
}

function main() {
    list_servers
    select_target
    set_direction
    set_src_dst_paths "$@"

    echo -ne "[ ${src_path[@]} ] >>>\t[ $dst_path ] ? "
    read -re _
    rsync -av --delete -e "ssh -p $port" "${src_path[@]}" "$dst_path"
}

# parse arguments if any
while getopts "ha:d:" opt; do
    case $opt in
    h) echo "Syntax: $(basename $0) [-a alias] [-d (to|from)] [src_path]... [dst_path]"
        echo -e "\tThe paths can be either relative or absolute."
        exit 0
        ;;
    a) alias_name="$OPTARG"
        ;;
    d) direction="$OPTARG"
        ;;
    *) exit 1
    esac
done
shift $((OPTIND - 1))
main "$@"
